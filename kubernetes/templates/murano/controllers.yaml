kind: PersistentVolume
apiVersion: v1
metadata:
  labels:
    openstack-app: murano-db
  name: os-murano-db
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /var/lib/harbor/murano/mysql
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    openstack-app: murano-db
  name: os-murano-db
  namespace: os-murano
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: extensions/v1beta1
kind: Job
metadata:
  labels:
    openstack-app: murano-manager
    version: v0.1.0
  name: murano-manager
  namespace: os-murano
spec:
  template:
    metadata:
      labels:
        openstack-app: murano-manager
        version: v0.1.0
      name: murano-manager
      namespace: os-murano
    spec:
#     hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: murano-manager
          image: {{ IMAGE_MURANO_MANAGER }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
          volumeMounts:
            - name: os-config-kubecfg
              mountPath: /var/run/harbor/secrets/config-kubecfg
              readOnly: true
            - name: os-config-user-ipa
              mountPath: /var/run/harbor/secrets/config-user-ipa
              readOnly: true
            - name: os-config-host-ipa
              mountPath: /var/run/harbor/secrets/config-host-ipa
              readOnly: true
            - name: os-config-db-root
              mountPath: /var/run/harbor/secrets/config-db-root
              readOnly: true
            - name: os-config-db
              mountPath: /var/run/harbor/secrets/config-db
              readOnly: true
            - name: os-config-keystone
              mountPath: /var/run/harbor/secrets/config-keystone
              readOnly: true
            - name: os-config-messaging-auth
              mountPath: /var/run/harbor/secrets/config-messaging-auth
              readOnly: true
            - name: os-config-ssl-secret
              mountPath: /run/harbor/auth/ssl
              readOnly: true
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
            - name: os-config-keystone-admin-user
              mountPath: /var/run/harbor/secrets/config-keystone-admin-user
              readOnly: true
      restartPolicy: OnFailure
      volumes:
        - name: os-config-kubecfg
          secret:
            secretName: murano-kubecfg
        - name: os-config-user-ipa
          secret:
            secretName: murano-user-ipa
        - name: os-config-host-ipa
          secret:
            secretName: murano-host-ipa
        - name: os-config-db-root
          secret:
            secretName: murano-db-root
        - name: os-config-db
          secret:
            secretName: murano-db
        - name: os-config-keystone
          secret:
            secretName: murano-keystone
        - name: os-config-messaging-auth
          secret:
            secretName: messaging-auth
        - name: os-config-ssl-secret
          secret:
            secretName: murano-ssl-secret
        - name: os-config-ssl-user-secret
          secret:
            secretName: murano-user-ssl-secret
        - name: os-config-keystone-admin-user
          secret:
            secretName: keystone-admin-user
---
apiVersion: extensions/v1beta1
kind: Job
metadata:
  labels:
    openstack-app: murano-bootstrapper
    version: v0.1.0
  name: murano-bootstrapper
  namespace: os-murano
spec:
  template:
    metadata:
      labels:
        openstack-app: murano-bootstrapper
        version: v0.1.0
      name: murano-bootstrapper
      namespace: os-murano
    spec:
#     hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: murano-bootstrapper
          image: {{ IMAGE_MURANO_MANAGER }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
            - name: OS_MANAGEMENT_ACTION
              value: bootstrap
          volumeMounts:
            - name: os-config-kubecfg
              mountPath: /var/run/harbor/secrets/config-kubecfg
              readOnly: true
            - name: os-config-user-ipa
              mountPath: /var/run/harbor/secrets/config-user-ipa
              readOnly: true
            - name: os-config-host-ipa
              mountPath: /var/run/harbor/secrets/config-host-ipa
              readOnly: true
            - name: os-config-db-root
              mountPath: /var/run/harbor/secrets/config-db-root
              readOnly: true
            - name: os-config-db
              mountPath: /var/run/harbor/secrets/config-db
              readOnly: true
            - name: os-config-keystone
              mountPath: /var/run/harbor/secrets/config-keystone
              readOnly: true
            - name: os-config-messaging-auth
              mountPath: /var/run/harbor/secrets/config-messaging-auth
              readOnly: true
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
      restartPolicy: OnFailure
      volumes:
        - name: os-config-kubecfg
          secret:
            secretName: murano-kubecfg
        - name: os-config-user-ipa
          secret:
            secretName: murano-user-ipa
        - name: os-config-host-ipa
          secret:
            secretName: murano-host-ipa
        - name: os-config-db-root
          secret:
            secretName: murano-db-root
        - name: os-config-db
          secret:
            secretName: murano-db
        - name: os-config-keystone
          secret:
            secretName: murano-keystone
        - name: os-config-messaging-auth
          secret:
            secretName: messaging-auth
        - name: os-config-ssl-user-secret
          secret:
            secretName: murano-user-ssl-secret
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    openstack-app: murano-db
    version: v0.1.0
  name: murano-db
  namespace: os-murano
spec:
  replicas: 1
  template:
    metadata:
      labels:
        openstack-app: murano-db
        version: v0.1.0
      name: murano-db
      namespace: os-murano
    spec:
#     hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: murano-db
          image: {{ IMAGE_MARIADB_SERVER }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          ports:
            - containerPort: 3314
              hostPort: 3314
              protocol: TCP
              name: mysql
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
            - name: DB_PORT
              value: '3314'
            - name: DB_TLS
              value: /run/harbor/auth/db
            - name: DB_ROOT_PASSWORD
              value: AUTH_MURANO_DB_ROOT_PASSWORD
            - name: MARIADB_DATABASE
              value: AUTH_MURANO_MARIADB_DATABASE
            - name: MARIADB_USER
              value: AUTH_MURANO_MARIADB_USER
            - name: MARIADB_PASSWORD
              value: AUTH_MURANO_MARIADB_PASSWORD
            - name: DB_NAME
              value: AUTH_MURANO_DB_NAME
            - name: DB_USER
              value: AUTH_MURANO_DB_USER
            - name: DB_PASSWORD
              value: AUTH_MURANO_DB_PASSWORD
          volumeMounts:
            - name: os-config-db-root
              mountPath: /var/run/harbor/secrets/config-db-root
              readOnly: true
            - name: os-config-db
              mountPath: /var/run/harbor/secrets/config-db
              readOnly: true
            - name: os-config-db-ssl-secret
              mountPath: /run/harbor/auth/db
              readOnly: true
            - mountPath: /var/lib/mysql
              name: os-murano-db
              readOnly: false
      volumes:
        - name: os-config-db-root
          secret:
            secretName: murano-db-root
        - name: os-config-db
          secret:
            secretName: murano-db
        - name: os-config-db-ssl-secret
          secret:
            secretName: murano-db-ssl-secret
        - name: os-murano-db
          persistentVolumeClaim:
            claimName: os-murano-db
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    openstack-app: murano
    version: v0.1.0
  name: murano-api-master
  namespace: os-murano
spec:
  replicas: 1
  template:
    metadata:
      labels:
        openstack-app: murano
        version: v0.1.0
      name: murano-api-master
      namespace: os-murano
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[
          {
            "name": "murano-api-init",
            "image": "{{ IMAGE_MURANO_INIT }}",
            "imagePullPolicy": "{{ IMAGE_PULL_POLICY }}",
            "env": [
              {
                "name": "OS_DOMAIN",
                "value": "{{ OS_DOMAIN }}"
              },
              {
                "name": "APP_COMPONENT",
                "value": "api"
              },
              {
                "name": "APP_USER",
                "value": "murano"
              }
            ],
            "volumeMounts": [
              {
                "name": "os-config-db",
                "mountPath": "/var/run/harbor/secrets/config-db",
                "readOnly": true
              },
              {
                "name": "os-config-keystone",
                "mountPath": "/var/run/harbor/secrets/config-keystone",
                "readOnly": true
              },
              {
                "name": "os-config-messaging-auth",
                "mountPath": "/var/run/harbor/secrets/config-messaging-auth",
                "readOnly": true
              },
              {
                "name": "os-config-ssl-secret",
                "mountPath": "/run/harbor/auth/ssl",
                "readOnly": true
              },
              {
                "name": "os-config-ssl-user-secret",
                "mountPath": "/run/harbor/auth/user",
                "readOnly": true
              },
              {
                "name": "pod-etc-murano",
                "mountPath": "/pod/etc/murano",
                "readOnly": false
              }
            ],
            "securityContext": {
              "privileged": false
            }
          }
        ]'
    spec:
#     hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: murano-api
          image: {{ IMAGE_MURANO_API }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
          volumeMounts:
            - name: pod-etc-murano
              mountPath: /etc/murano
              readOnly: true
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
        - name: murano-api-tls
          image: {{ IMAGE_HAPROXY_SERVER }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          ports:
            - containerPort: 8082
              hostPort: 8082
              protocol: TCP
              name: v-api
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
            - name: PORT_EXPOSE
              value: '8082'
            - name: PORT_LOCAL
              value: '8082'
          volumeMounts:
            - name: os-config-ssl-secret
              mountPath: /run/harbor/auth/ssl
              readOnly: true
      volumes:
        - name: pod-etc-murano
          emptyDir: {}
        - name: os-config-db
          secret:
            secretName: murano-db
        - name: os-config-keystone
          secret:
            secretName: murano-keystone
        - name: os-config-messaging-auth
          secret:
            secretName: messaging-auth
        - name: os-config-ssl-secret
          secret:
            secretName: murano-ssl-secret
        - name: os-config-ssl-user-secret
          secret:
            secretName: murano-user-ssl-secret
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    openstack-app: murano-ampq
    version: v0.1.0
  name: murano-ampq
  namespace: os-murano
spec:
  replicas: 1
  template:
    metadata:
      labels:
        openstack-app: murano-ampq
        version: v0.1.0
      name: murano-ampq
      namespace: os-murano
    spec:
#     hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: murano-ampq
          image: {{ IMAGE_RABBITMQ_SERVER }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          ports:
            - containerPort: 5673
              hostPort: 5673
              protocol: TCP
              name: rabbit
            - containerPort: 25673
              hostPort: 25673
              protocol: TCP
              name: rmq-dist
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
            - name: RABBIT_PORT
              value: '5673'
            - name: RABBIT_NODENAME
              value: murano-ampq
            - name: RABBIT_TLS
              value: /run/harbor/auth/ssl
            - name: RABBIT_USER
              value: AUTH_MURANO_RABBITMQ_USER
            - name: RABBIT_PASS
              value: AUTH_MURANO_RABBITMQ_PASS
          volumeMounts:
            - name: os-config-messaging-auth
              mountPath: /var/run/harbor/secrets/config-messaging-auth
              readOnly: true
            - name: os-config-ssl-secret
              mountPath: /run/harbor/auth/ssl
              readOnly: true
      volumes:
        - name: os-config-messaging-auth
          secret:
            secretName: messaging-auth
        - name: os-config-ssl-secret
          secret:
            secretName: murano-ampq-ssl-secret
