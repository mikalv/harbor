kind: PersistentVolume
apiVersion: v1
metadata:
  labels:
    openstack-app: gnocchi-data
  name: os-gnocchi-data
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /var/lib/harbor/gnocchi/data
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    openstack-app: gnocchi-data
  name: os-gnocchi-data
  namespace: os-gnocchi
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
kind: PersistentVolume
apiVersion: v1
metadata:
  labels:
    openstack-app: gnocchi-db
  name: os-gnocchi-db
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /var/lib/harbor/gnocchi/mysql
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    openstack-app: gnocchi-db
  name: os-gnocchi-db
  namespace: os-gnocchi
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
kind: PersistentVolume
apiVersion: v1
metadata:
  labels:
    openstack-app: gnocchi-etcd
  name: os-gnocchi-etcd
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /var/lib/harbor/gnocchi/etcd
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    openstack-app: gnocchi-etcd
  name: os-gnocchi-etcd
  namespace: os-gnocchi
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
kind: PersistentVolume
apiVersion: v1
metadata:
  labels:
    openstack-app: gnocchi-pgsql
  name: os-gnocchi-pgsql
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /var/lib/harbor/gnocchi/psql
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    openstack-app: gnocchi-pgsql
  name: os-gnocchi-pgsql
  namespace: os-gnocchi
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: extensions/v1beta1
kind: Job
metadata:
  labels:
    openstack-app: gnocchi-manager
    version: v0.1.0
  name: gnocchi-manager
  namespace: os-gnocchi
spec:
  template:
    metadata:
      labels:
        openstack-app: gnocchi-manager
        version: v0.1.0
      name: gnocchi-manager
      namespace: os-gnocchi
    spec:
#     hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: gnocchi-manager
          image: {{ IMAGE_GNOCCHI_MANAGER }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
            - name: ETCD_LOCAL_PORT
              value: '4003'
          volumeMounts:
            - name: os-config-kubecfg
              mountPath: /var/run/harbor/secrets/config-kubecfg
              readOnly: true
            - name: os-config-db-root
              mountPath: /var/run/harbor/secrets/config-db-root
              readOnly: true
            - name: os-config-db
              mountPath: /var/run/harbor/secrets/config-db
              readOnly: true
            - name: os-config-db-root-grafana
              mountPath: /var/run/harbor/secrets/config-db-root-grafana
              readOnly: true
            - name: os-config-db-grafana
              mountPath: /var/run/harbor/secrets/config-db-grafana
              readOnly: true
            - name: os-config-keystone
              mountPath: /var/run/harbor/secrets/config-keystone
              readOnly: true
            - name: os-config-ssl-secret
              mountPath: /run/harbor/auth/ssl
              readOnly: true
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
            - name: os-config-keystone-admin-user
              mountPath: /var/run/harbor/secrets/config-keystone-admin-user
              readOnly: true
            - name: pod-etcd
              mountPath: /pod/etcd
              readOnly: false
          securityContext:
            privileged: false
        - name: gnocchi-etcd-proxy
          image: {{ IMAGE_ETCD_PROXY }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
            - name: ETCD_PEERS_PORT
              value: '7002'
            - name: ETCD_PORT
              value: '4002'
            - name: ETCD_HOSTNAME_VAR
              value: GNOCCHI_ETCD_SERVICE_HOST_SVC
            - name: ETCD_LOCAL_PORT
              value: '4003'
            - name: ETCD_PROXY_POD_TYPE
              value: Job
          volumeMounts:
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
            - name: os-etcd-data
              mountPath: /data
              readOnly: false
            - name: pod-etcd
              mountPath: /pod/etcd
              readOnly: false
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
          securityContext:
            privileged: false
      restartPolicy: OnFailure
      volumes:
        - name: pod-etcd
          emptyDir: {}
        - name: os-config-kubecfg
          secret:
            secretName: gnocchi-kubecfg
        - name: os-config-db-root
          secret:
            secretName: gnocchi-db-root
        - name: os-config-db
          secret:
            secretName: gnocchi-db
        - name: os-config-db-root-grafana
          secret:
            secretName: gnocchi-db-grafana-root
        - name: os-config-db-grafana
          secret:
            secretName: gnocchi-db-grafana
        - name: os-config-keystone
          secret:
            secretName: gnocchi-keystone
        - name: os-config-ssl-secret
          secret:
            secretName: gnocchi-ssl-secret
        - name: os-config-ssl-user-secret
          secret:
            secretName: gnocchi-user-ssl-secret
        - name: os-config-keystone-admin-user
          secret:
            secretName: keystone-admin-user
        - name: os-etcd-data
          emptyDir: {}
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    openstack-app: gnocchi-db
    version: v0.1.0
  name: gnocchi-db
  namespace: os-gnocchi
spec:
  replicas: 1
  template:
    metadata:
      labels:
        openstack-app: gnocchi-db
        version: v0.1.0
      name: gnocchi-db
      namespace: os-gnocchi
    spec:
#     hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: gnocchi-db
          image: {{ IMAGE_MARIADB_SERVER }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          ports:
            - containerPort: 3320
              hostPort: 3320
              protocol: TCP
              name: mysql
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
            - name: DB_PORT
              value: '3320'
            - name: DB_TLS
              value: /run/harbor/auth/db
            - name: DB_ROOT_PASSWORD
              value: AUTH_GNOCCHI_DB_ROOT_PASSWORD
            - name: MARIADB_DATABASE
              value: AUTH_GNOCCHI_MARIADB_DATABASE
            - name: MARIADB_USER
              value: AUTH_GNOCCHI_MARIADB_USER
            - name: MARIADB_PASSWORD
              value: AUTH_GNOCCHI_MARIADB_PASSWORD
            - name: DB_NAME
              value: AUTH_GNOCCHI_DB_NAME
            - name: DB_USER
              value: AUTH_GNOCCHI_DB_USER
            - name: DB_PASSWORD
              value: AUTH_GNOCCHI_DB_PASSWORD
          volumeMounts:
            - name: os-config-db-root
              mountPath: /var/run/harbor/secrets/config-db-root
              readOnly: true
            - name: os-config-db
              mountPath: /var/run/harbor/secrets/config-db
              readOnly: true
            - name: os-config-db-ssl-secret
              mountPath: /run/harbor/auth/db
              readOnly: true
            - mountPath: /var/lib/mysql
              name: os-gnocchi-db
              readOnly: false
      volumes:
        - name: os-config-db-root
          secret:
            secretName: gnocchi-db-root
        - name: os-config-db
          secret:
            secretName: gnocchi-db
        - name: os-config-db-ssl-secret
          secret:
            secretName: gnocchi-db-ssl-secret
        - name: os-gnocchi-db
          persistentVolumeClaim:
            claimName: os-gnocchi-db
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    openstack-app: gnocchi-etcd
    version: v0.1.0
  name: gnocchi-etcd
  namespace: os-gnocchi
spec:
  replicas: 1
  template:
    metadata:
      labels:
        openstack-app: gnocchi-etcd
        version: v0.1.0
      name: gnocchi-etcd
      namespace: os-gnocchi
    spec:
#     hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: gnocchi-etcd
          image: {{ IMAGE_ETCD_SERVER }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ETCD_PEERS_PORT
              value: '7002'
            - name: ETCD_PORT
              value: '4002'
            - name: ETCD_HOSTNAME_VAR
              value: GNOCCHI_ETCD_SERVICE_HOST_SVC
          ports:
            - containerPort: 4002
              name: etcd
              protocol: TCP
            - containerPort: 7002
              name: etcd-peers
              protocol: TCP
          command:
            - /start-master.sh
          volumeMounts:
            - name: os-config-kubecfg
              mountPath: /var/run/harbor/secrets/config-kubecfg
              readOnly: true
            - name: os-config-ssl-secret
              mountPath: /run/harbor/auth/ssl
              readOnly: true
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
            - name: os-etcd-data
              mountPath: /data
              readOnly: false
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
          securityContext:
            privileged: false
      restartPolicy: Always
      volumes:
        - name: os-etcd-data
          persistentVolumeClaim:
            claimName: os-gnocchi-etcd
        - name: os-config-kubecfg
          secret:
            secretName: gnocchi-kubecfg
        - name: os-config-ssl-secret
          secret:
            secretName: gnocchi-etcd-ssl-secret
        - name: os-config-ssl-user-secret
          secret:
            secretName: gnocchi-user-ssl-secret
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    openstack-app: gnocchi
    version: v0.1.0
  name: gnocchi-api-master
  namespace: os-gnocchi
spec:
  replicas: 1
  template:
    metadata:
      labels:
        openstack-app: gnocchi
        version: v0.1.0
      name: gnocchi-api-master
      namespace: os-gnocchi
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[
          {
          	"name": "gnocchi-api-init",
          	"image": "{{ IMAGE_GNOCCHI_INIT }}",
          	"imagePullPolicy": "{{ IMAGE_PULL_POLICY }}",
          	"env": [
          		{
          			"name": "OS_DOMAIN",
          			"value": "{{ OS_DOMAIN }}"
          		},
          		{
          			"name": "APP_COMPONENT",
          			"value": "api"
          		},
          		{
          			"name": "APP_USER",
          			"value": "gnocchi"
          		},
          		{
          			"name": "ETCD_LOCAL_PORT",
          			"value": "4004"
          		}
          	],
          	"volumeMounts": [
          		{
          			"name": "os-config-db",
          			"mountPath": "/var/run/harbor/secrets/config-db",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-keystone",
          			"mountPath": "/var/run/harbor/secrets/config-keystone",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-ssl-secret",
          			"mountPath": "/run/harbor/auth/ssl",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-ssl-user-secret",
          			"mountPath": "/run/harbor/auth/user",
          			"readOnly": true
          		},
          		{
          			"name": "pod-etc-gnocchi",
          			"mountPath": "/pod/etc/gnocchi",
          			"readOnly": false
          		}
          	],
          	"securityContext": {
          		"privileged": false
          	}
          }
        ]'
    spec:
#     hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: gnocchi-api
          image: {{ IMAGE_GNOCCHI_API }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
          volumeMounts:
            - name: pod-etc-gnocchi
              mountPath: /etc/gnocchi
              readOnly: true
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
          securityContext:
            privileged: false
        - name: gnocchi-api-tls
          image: {{ IMAGE_HAPROXY_SERVER }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          ports:
            - containerPort: 8041
              hostPort: 8041
              protocol: TCP
              name: m-api
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
            - name: PORT_EXPOSE
              value: '8041'
            - name: PORT_LOCAL
              value: '8041'
          volumeMounts:
            - name: os-config-ssl-secret
              mountPath: /run/harbor/auth/ssl
              readOnly: true
          securityContext:
            privileged: false
        - name: gnocchi-etcd-proxy
          image: {{ IMAGE_ETCD_PROXY }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
            - name: ETCD_PEERS_PORT
              value: '7002'
            - name: ETCD_PORT
              value: '4002'
            - name: ETCD_HOSTNAME_VAR
              value: GNOCCHI_ETCD_SERVICE_HOST_SVC
            - name: ETCD_LOCAL_PORT
              value: '4004'
          volumeMounts:
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
            - name: os-etcd-data
              mountPath: /data
              readOnly: false
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
          securityContext:
            privileged: false
      volumes:
        - name: os-etcd-data
          emptyDir: {}
        - name: pod-etc-gnocchi
          emptyDir: {}
        - name: os-config-db
          secret:
            secretName: gnocchi-db
        - name: os-config-keystone
          secret:
            secretName: gnocchi-keystone
        - name: os-config-ssl-secret
          secret:
            secretName: gnocchi-ssl-secret
        - name: os-config-ssl-user-secret
          secret:
            secretName: gnocchi-user-ssl-secret
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    openstack-app: gnocchi-statsd
    version: v0.1.0
  name: gnocchi-statsd-master
  namespace: os-gnocchi
spec:
  replicas: 1
  template:
    metadata:
      labels:
        openstack-app: gnocchi-statsd
        version: v0.1.0
      name: gnocchi-statsd-master
      namespace: os-gnocchi
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[
          {
          	"name": "gnocchi-statsd-init",
          	"image": "{{ IMAGE_GNOCCHI_INIT }}",
          	"imagePullPolicy": "{{ IMAGE_PULL_POLICY }}",
          	"env": [
          		{
          			"name": "OS_DOMAIN",
          			"value": "{{ OS_DOMAIN }}"
          		},
          		{
          			"name": "APP_COMPONENT",
          			"value": "statsd"
          		},
          		{
          			"name": "APP_USER",
          			"value": "gnocchi"
          		},
          		{
          			"name": "ETCD_LOCAL_PORT",
          			"value": "4005"
          		}
          	],
          	"volumeMounts": [
          		{
          			"name": "os-config-db",
          			"mountPath": "/var/run/harbor/secrets/config-db",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-keystone",
          			"mountPath": "/var/run/harbor/secrets/config-keystone",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-statsd",
          			"mountPath": "/var/run/harbor/secrets/config-statsd",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-ssl-user-secret",
          			"mountPath": "/run/harbor/auth/user",
          			"readOnly": true
          		},
          		{
          			"name": "pod-etc-gnocchi",
          			"mountPath": "/pod/etc/gnocchi",
          			"readOnly": false
          		}
          	],
          	"securityContext": {
          		"privileged": false
          	}
          }
        ]'
    spec:
#     hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: gnocchi-statsd
          image: {{ IMAGE_GNOCCHI_STATSD }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
          volumeMounts:
            - name: pod-etc-gnocchi
              mountPath: /etc/gnocchi
              readOnly: true
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
          securityContext:
            privileged: false
        - name: gnocchi-etcd-proxy
          image: {{ IMAGE_ETCD_PROXY }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
            - name: ETCD_PEERS_PORT
              value: '7002'
            - name: ETCD_PORT
              value: '4002'
            - name: ETCD_HOSTNAME_VAR
              value: GNOCCHI_ETCD_SERVICE_HOST_SVC
            - name: ETCD_LOCAL_PORT
              value: '4005'
          volumeMounts:
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
            - name: os-etcd-data
              mountPath: /data
              readOnly: false
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
          securityContext:
            privileged: false
      volumes:
        - name: os-etcd-data
          emptyDir: {}
        - name: pod-etc-gnocchi
          emptyDir: {}
        - name: os-config-db
          secret:
            secretName: gnocchi-db
        - name: os-config-keystone
          secret:
            secretName: gnocchi-keystone
        - name: os-config-statsd
          secret:
            secretName: gnocchi-statsd
        - name: os-config-ssl-user-secret
          secret:
            secretName: gnocchi-user-ssl-secret
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    openstack-app: gnocchi-metricd
    version: v0.1.0
  name: gnocchi-metricd-master
  namespace: os-gnocchi
spec:
  replicas: 1
  template:
    metadata:
      labels:
        openstack-app: gnocchi-metricd
        version: v0.1.0
      name: gnocchi-metricd-master
      namespace: os-gnocchi
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[
          {
          	"name": "gnocchi-metricd-init",
          	"image": "{{ IMAGE_GNOCCHI_INIT }}",
          	"imagePullPolicy": "{{ IMAGE_PULL_POLICY }}",
          	"env": [
          		{
          			"name": "OS_DOMAIN",
          			"value": "{{ OS_DOMAIN }}"
          		},
          		{
          			"name": "APP_COMPONENT",
          			"value": "metricd"
          		},
          		{
          			"name": "APP_USER",
          			"value": "gnocchi"
          		},
          		{
          			"name": "ETCD_LOCAL_PORT",
          			"value": "4006"
          		}
          	],
          	"volumeMounts": [
          		{
          			"name": "os-config-db",
          			"mountPath": "/var/run/harbor/secrets/config-db",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-keystone",
          			"mountPath": "/var/run/harbor/secrets/config-keystone",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-ssl-user-secret",
          			"mountPath": "/run/harbor/auth/user",
          			"readOnly": true
          		},
          		{
          			"name": "pod-etc-gnocchi",
          			"mountPath": "/pod/etc/gnocchi",
          			"readOnly": false
          		}
          	],
          	"securityContext": {
          		"privileged": false
          	}
          }
        ]'
    spec:
#     hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: gnocchi-metricd
          image: {{ IMAGE_GNOCCHI_METRICD }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
          volumeMounts:
            - name: pod-etc-gnocchi
              mountPath: /etc/gnocchi
              readOnly: true
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
          securityContext:
            privileged: false
        - name: gnocchi-etcd-proxy
          image: {{ IMAGE_ETCD_PROXY }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
            - name: ETCD_PEERS_PORT
              value: '7002'
            - name: ETCD_PORT
              value: '4002'
            - name: ETCD_HOSTNAME_VAR
              value: GNOCCHI_ETCD_SERVICE_HOST_SVC
            - name: ETCD_LOCAL_PORT
              value: '4006'
          volumeMounts:
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
            - name: os-etcd-data
              mountPath: /data
              readOnly: false
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
          securityContext:
            privileged: false
      volumes:
        - name: os-etcd-data
          emptyDir: {}
        - name: pod-etc-gnocchi
          emptyDir: {}
        - name: os-config-db
          secret:
            secretName: gnocchi-db
        - name: os-config-keystone
          secret:
            secretName: gnocchi-keystone
        - name: os-config-ssl-user-secret
          secret:
            secretName: gnocchi-user-ssl-secret
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    openstack-app: gnocchi-pgsql
    version: v0.1.0
  name: gnocchi-pgsql
  namespace: os-gnocchi
spec:
  replicas: 1
  template:
    metadata:
      labels:
        openstack-app: gnocchi-pgsql
        version: v0.1.0
      name: gnocchi-pgsql
      namespace: os-gnocchi
    spec:
#     hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: os-gnocchi
          image: {{ IMAGE_GNOCCHI_GRAFANA_DB }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          ports:
            - containerPort: 5433
              protocol: TCP
              name: psql
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
            - name: DB_PORT
              value: '5433'
            - name: DB_TLS
              value: /run/harbor/auth/db
            - name: ROOT_DB_NAME
              value: AUTH_GNOCCHI_GRAFANA_DB_ROOT_NAME
            - name: ROOT_DB_USER
              value: AUTH_GNOCCHI_GRAFANA_DB_ROOT_USER
            - name: ROOT_DB_PASSWORD
              value: AUTH_GNOCCHI_GRAFANA_DB_ROOT_PASSWORD
          volumeMounts:
            - name: os-config-db
              mountPath: /var/run/harbor/secrets/config-db
              readOnly: true
            - name: os-config-psql-ssl-secret
              mountPath: /run/harbor/auth/db
              readOnly: true
            - name: data
              mountPath: /var/lib/postgresql/data
              readOnly: false
      volumes:
        - name: os-config-db
          secret:
            secretName: gnocchi-db-grafana-root
        - name: os-config-psql-ssl-secret
          secret:
            secretName: gnocchi-pgsql-ssl-secret
        - name: data
          persistentVolumeClaim:
            claimName: os-gnocchi-pgsql
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    openstack-app: gnocchi-grafana
    version: v0.1.0
  name: gnocchi-grafana-master
  namespace: os-gnocchi
spec:
  replicas: 1
  template:
    metadata:
      labels:
        openstack-app: gnocchi-grafana
        version: v0.1.0
      name: gnocchi-grafana-master
      namespace: os-gnocchi
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[
          {
            "name": "gnocchi-grafana-init",
            "image": "{{ IMAGE_GNOCCHI_INIT }}",
            "imagePullPolicy": "{{ IMAGE_PULL_POLICY }}",
            "env": [
              {
                "name": "OS_DOMAIN",
                "value": "{{ OS_DOMAIN }}"
              },
              {
                "name": "APP_COMPONENT",
                "value": "grafana"
              },
              {
                "name": "APP_USER",
                "value": "grafana"
              }
            ],
            "volumeMounts": [
              {
                "name": "os-config-db-grafana",
                "mountPath": "/var/run/harbor/secrets/config-db-grafana",
                "readOnly": true
              },
              {
                "name": "os-config-ldap",
                "mountPath": "/var/run/harbor/secrets/config-ldap",
                "readOnly": true
              },
              {
                "name": "os-config-grafana-secret-key",
                "mountPath": "/var/run/harbor/secrets/config-grafana-secret-key",
                "readOnly": true
              },
              {
                "name": "os-config-ssl-secret",
                "mountPath": "/run/harbor/auth/ssl",
                "readOnly": true
              },
              {
                "name": "os-config-ssl-user-secret",
                "mountPath": "/run/harbor/auth/user",
                "readOnly": true
              },
              {
                "name": "os-config-federation-saml2-secret",
                "mountPath": "/run/harbor/auth/mellon",
                "readOnly": true
              },
              {
                "name": "pod-etc-grafana",
                "mountPath": "/pod/etc/grafana",
                "readOnly": false
              }
            ],
            "securityContext": {
              "privileged": false
            }
          }
        ]'
    spec:
#     hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: gnocchi-grafana
          image: {{ IMAGE_GNOCCHI_GRAFANA }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
          volumeMounts:
            - name: pod-etc-grafana
              mountPath: /etc/grafana
              readOnly: true
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
          securityContext:
            privileged: false
        - name: gnocchi-grafana-auth
          image: {{ IMAGE_GNOCCHI_GRAFANA_AUTH }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          ports:
            - containerPort: 3000
              hostPort: 3000
              protocol: TCP
              name: graf
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
            - name: PORT_EXPOSE
              value: '3000'
            - name: PORT_LOCAL
              value: '3000'
          volumeMounts:
            - name: os-config-ssl-secret
              mountPath: /run/harbor/auth/ssl
              readOnly: true
            - name: os-config-federation-saml2-secret
              mountPath: /run/harbor/auth/mellon
              readOnly: true
          securityContext:
            privileged: false
      volumes:
        - name: pod-etc-grafana
          emptyDir: {}
        - name: os-config-db-grafana
          secret:
            secretName: gnocchi-db-grafana
        - name: os-config-grafana-secret-key
          secret:
            secretName: gnocchi-grafana-secret-key
        - name: os-config-ssl-secret
          secret:
            secretName: grafana-ssl-secret
        - name: os-config-ssl-user-secret
          secret:
            secretName: gnocchi-user-ssl-secret
        - name: os-config-ldap
          secret:
            secretName: gnocchi-ldap
        - name: os-config-federation-saml2-secret
          secret:
            secretName: grafana-federation-saml2-secret
