kind: PersistentVolume
apiVersion: v1
metadata:
  labels:
    openstack-app: nova-db
  name: os-nova-db
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /var/lib/harbor/nova/mysql
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    openstack-app: nova-db
  name: os-nova-db
  namespace: os-nova
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: extensions/v1beta1
kind: Job
metadata:
  labels:
    openstack-app: nova-manager
    version: v0.1.0
  name: nova-manager
  namespace: os-nova
spec:
  template:
    metadata:
      labels:
        openstack-app: nova-manager
        version: v0.1.0
      name: nova-manager
      namespace: os-nova
    spec:
      hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: nova-manager
          image: {{ IMAGE_NOVA_MANAGER }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
          volumeMounts:
            - name: os-config-kubecfg
              mountPath: /var/run/harbor/secrets/config-kubecfg
              readOnly: true
            - name: os-config-user-ipa
              mountPath: /var/run/harbor/secrets/config-user-ipa
              readOnly: true
            - name: os-config-host-ipa
              mountPath: /var/run/harbor/secrets/config-host-ipa
              readOnly: true
            - name: os-config-db-root
              mountPath: /var/run/harbor/secrets/config-db-root
              readOnly: true
            - name: os-config-db
              mountPath: /var/run/harbor/secrets/config-db
              readOnly: true
            - name: os-config-api-db
              mountPath: /var/run/harbor/secrets/config-api-db
              readOnly: true
            - name: os-config-keystone
              mountPath: /var/run/harbor/secrets/config-keystone
              readOnly: true
            - name: os-config-messaging-auth
              mountPath: /var/run/harbor/secrets/config-messaging-auth
              readOnly: true
            - name: os-config-ssl-secret
              mountPath: /run/harbor/auth/ssl
              readOnly: true
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
            - name: os-config-keystone-admin-user
              mountPath: /var/run/harbor/secrets/config-keystone-admin-user
              readOnly: true
          securityContext:
            privileged: false
      restartPolicy: OnFailure
      volumes:
        - name: os-config-kubecfg
          secret:
            secretName: nova-kubecfg
        - name: os-config-user-ipa
          secret:
            secretName: nova-user-ipa
        - name: os-config-host-ipa
          secret:
            secretName: nova-host-ipa
        - name: os-config-db-root
          secret:
            secretName: nova-db-root
        - name: os-config-db
          secret:
            secretName: nova-db
        - name: os-config-api-db
          secret:
            secretName: nova-api-db
        - name: os-config-keystone
          secret:
            secretName: nova-keystone
        - name: os-config-messaging-auth
          secret:
            secretName: messaging-auth
        - name: os-config-ssl-secret
          secret:
            secretName: nova-ssl-secret
        - name: os-config-ssl-user-secret
          secret:
            secretName: nova-user-ssl-secret
        - name: os-config-keystone-admin-user
          secret:
            secretName: keystone-admin-user
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    openstack-app: nova-db
    version: v0.1.0
  name: nova-db
  namespace: os-nova
spec:
  replicas: 1
  template:
    metadata:
      labels:
        openstack-app: nova-db
        version: v0.1.0
      name: nova-db
      namespace: os-nova
    spec:
      hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: nova-db
          image: {{ IMAGE_MARIADB_SERVER }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          ports:
            - containerPort: 3312
              hostPort: 3312
              protocol: TCP
              name: mysql
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
            - name: DB_PORT
              value: '3312'
            - name: DB_TLS
              value: /run/harbor/auth/db
            - name: DB_ROOT_PASSWORD
              value: AUTH_NOVA_DB_ROOT_PASSWORD
            - name: MARIADB_DATABASE
              value: AUTH_NOVA_MARIADB_DATABASE
            - name: MARIADB_USER
              value: AUTH_NOVA_MARIADB_USER
            - name: MARIADB_PASSWORD
              value: AUTH_NOVA_MARIADB_PASSWORD
            - name: DB_NAME
              value: AUTH_NOVA_DB_NAME
            - name: DB_USER
              value: AUTH_NOVA_DB_USER
            - name: DB_PASSWORD
              value: AUTH_NOVA_DB_PASSWORD
            - name: DB_NAME_1
              value: AUTH_NOVA_API_DB_NAME
            - name: DB_USER_1
              value: AUTH_NOVA_API_DB_USER
            - name: DB_PASSWORD_1
              value: AUTH_NOVA_API_DB_PASSWORD
          volumeMounts:
            - name: os-config-db-root
              mountPath: /var/run/harbor/secrets/config-db-root
              readOnly: true
            - name: os-config-db
              mountPath: /var/run/harbor/secrets/config-db
              readOnly: true
            - name: os-config-api-db
              mountPath: /var/run/harbor/secrets/config-api-db
              readOnly: true
            - name: os-config-db-ssl-secret
              mountPath: /run/harbor/auth/db
              readOnly: true
            - mountPath: /var/lib/mysql
              name: os-nova-db
              readOnly: false
      volumes:
        - name: os-config-db-root
          secret:
            secretName: nova-db-root
        - name: os-config-db
          secret:
            secretName: nova-db
        - name: os-config-api-db
          secret:
            secretName: nova-api-db
        - name: os-config-db-ssl-secret
          secret:
            secretName: nova-db-ssl-secret
        - name: os-nova-db
          persistentVolumeClaim:
            claimName: os-nova-db
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    openstack-app: nova
    version: v0.1.0
  name: nova-api-master
  namespace: os-nova
spec:
  replicas: 1
  template:
    metadata:
      labels:
        openstack-app: nova
        version: v0.1.0
      name: nova-api-master
      namespace: os-nova
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[
          {
          	"name": "nova-api-init",
          	"image": "{{ IMAGE_NOVA_INIT }}",
          	"imagePullPolicy": "{{ IMAGE_PULL_POLICY }}",
          	"env": [
          		{
          			"name": "OS_DOMAIN",
          			"value": "{{ OS_DOMAIN }}"
          		},
          		{
          			"name": "APP_COMPONENT",
          			"value": "api"
          		},
          		{
          			"name": "APP_USER",
          			"value": "nova"
          		},
          		{
          			"name": "NOVA_ROLE",
          			"value": "controller"
          		}
          	],
          	"volumeMounts": [
          		{
          			"name": "os-config-db",
          			"mountPath": "/var/run/harbor/secrets/config-db",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-api-db",
          			"mountPath": "/var/run/harbor/secrets/config-api-db",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-keystone",
          			"mountPath": "/var/run/harbor/secrets/config-keystone",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-messaging-auth",
          			"mountPath": "/var/run/harbor/secrets/config-messaging-auth",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-ssl-secret",
          			"mountPath": "/run/harbor/auth/ssl",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-ssl-user-secret",
          			"mountPath": "/run/harbor/auth/user",
          			"readOnly": true
          		},
          		{
          			"name": "pod-etc-nova",
          			"mountPath": "/pod/etc/nova",
          			"readOnly": false
          		}
          	],
          	"securityContext": {
          		"privileged": false
          	}
          }
        ]'
    spec:
      hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: nova-api
          image: {{ IMAGE_NOVA_API }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          ports:
            - containerPort: 8774
              hostPort: 8774
              protocol: TCP
              name: n-api
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
          volumeMounts:
            - name: pod-etc-nova
              mountPath: /etc/nova
              readOnly: true
            - name: os-config-ssl-secret
              mountPath: /run/harbor/auth/ssl
              readOnly: true
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
          securityContext:
            privileged: false
      volumes:
        - name: pod-etc-nova
          emptyDir: {}
        - name: os-config-db
          secret:
            secretName: nova-db
        - name: os-config-api-db
          secret:
            secretName: nova-api-db
        - name: os-config-keystone
          secret:
            secretName: nova-keystone
        - name: os-config-messaging-auth
          secret:
            secretName: messaging-auth
        - name: os-config-ssl-secret
          secret:
            secretName: nova-ssl-secret
        - name: os-config-ssl-user-secret
          secret:
            secretName: nova-user-ssl-secret
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    openstack-app: nova-conductor
    version: v0.1.0
  name: nova-conductor-master
  namespace: os-nova
spec:
  replicas: 1
  template:
    metadata:
      labels:
        openstack-app: nova-conductor
        version: v0.1.0
      name: nova-conductor-master
      namespace: os-nova
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[
          {
          	"name": "nova-conductor-init",
          	"image": "{{ IMAGE_NOVA_INIT }}",
          	"imagePullPolicy": "{{ IMAGE_PULL_POLICY }}",
          	"env": [
          		{
          			"name": "OS_DOMAIN",
          			"value": "{{ OS_DOMAIN }}"
          		},
          		{
          			"name": "APP_COMPONENT",
          			"value": "conductor"
          		},
          		{
          			"name": "APP_USER",
          			"value": "nova"
          		},
          		{
          			"name": "NOVA_ROLE",
          			"value": "controller"
          		}
          	],
          	"volumeMounts": [
          		{
          			"name": "os-config-db",
          			"mountPath": "/var/run/harbor/secrets/config-db",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-api-db",
          			"mountPath": "/var/run/harbor/secrets/config-api-db",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-keystone",
          			"mountPath": "/var/run/harbor/secrets/config-keystone",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-messaging-auth",
          			"mountPath": "/var/run/harbor/secrets/config-messaging-auth",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-ssl-user-secret",
          			"mountPath": "/run/harbor/auth/user",
          			"readOnly": true
          		},
          		{
          			"name": "pod-etc-nova",
          			"mountPath": "/pod/etc/nova",
          			"readOnly": false
          		}
          	],
          	"securityContext": {
          		"privileged": false
          	}
          }
        ]'
    spec:
      hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: nova-conductor
          image: {{ IMAGE_NOVA_CONDUCTOR }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
          volumeMounts:
            - name: pod-etc-nova
              mountPath: /etc/nova
              readOnly: true
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
          securityContext:
            privileged: false
      volumes:
        - name: pod-etc-nova
          emptyDir: {}
        - name: os-config-db
          secret:
            secretName: nova-db
        - name: os-config-api-db
          secret:
            secretName: nova-api-db
        - name: os-config-keystone
          secret:
            secretName: nova-keystone
        - name: os-config-messaging-auth
          secret:
            secretName: messaging-auth
        - name: os-config-ssl-user-secret
          secret:
            secretName: nova-user-ssl-secret
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    openstack-app: nova-scheduler
    version: v0.1.0
  name: nova-scheduler-master
  namespace: os-nova
spec:
  replicas: 1
  template:
    metadata:
      labels:
        openstack-app: nova-scheduler
        version: v0.1.0
      name: nova-scheduler-master
      namespace: os-nova
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[
          {
          	"name": "nova-scheduler-init",
          	"image": "{{ IMAGE_NOVA_INIT }}",
          	"imagePullPolicy": "{{ IMAGE_PULL_POLICY }}",
          	"env": [
          		{
          			"name": "OS_DOMAIN",
          			"value": "{{ OS_DOMAIN }}"
          		},
          		{
          			"name": "APP_COMPONENT",
          			"value": "scheduler"
          		},
          		{
          			"name": "APP_USER",
          			"value": "nova"
          		},
          		{
          			"name": "NOVA_ROLE",
          			"value": "controller"
          		}
          	],
          	"volumeMounts": [
          		{
          			"name": "os-config-db",
          			"mountPath": "/var/run/harbor/secrets/config-db",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-api-db",
          			"mountPath": "/var/run/harbor/secrets/config-api-db",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-keystone",
          			"mountPath": "/var/run/harbor/secrets/config-keystone",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-messaging-auth",
          			"mountPath": "/var/run/harbor/secrets/config-messaging-auth",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-ssl-user-secret",
          			"mountPath": "/run/harbor/auth/user",
          			"readOnly": true
          		},
          		{
          			"name": "pod-etc-nova",
          			"mountPath": "/pod/etc/nova",
          			"readOnly": false
          		}
          	],
          	"securityContext": {
          		"privileged": false
          	}
          }
        ]'
    spec:
      hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: nova-scheduler
          image: {{ IMAGE_NOVA_SCHEDULER }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
          volumeMounts:
            - name: pod-etc-nova
              mountPath: /etc/nova
              readOnly: true
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
          securityContext:
            privileged: false
      volumes:
        - name: pod-etc-nova
          emptyDir: {}
        - name: os-config-db
          secret:
            secretName: nova-db
        - name: os-config-api-db
          secret:
            secretName: nova-api-db
        - name: os-config-keystone
          secret:
            secretName: nova-keystone
        - name: os-config-messaging-auth
          secret:
            secretName: messaging-auth
        - name: os-config-ssl-user-secret
          secret:
            secretName: nova-user-ssl-secret
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    openstack-app: nova-consoleauth
    version: v0.1.0
  name: nova-consoleauth-master
  namespace: os-nova
spec:
  replicas: 1
  template:
    metadata:
      labels:
        openstack-app: nova-consoleauth
        version: v0.1.0
      name: nova-consoleauth-master
      namespace: os-nova
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[
          {
          	"name": "nova-consoleauth-init",
          	"image": "{{ IMAGE_NOVA_INIT }}",
          	"imagePullPolicy": "{{ IMAGE_PULL_POLICY }}",
          	"env": [
          		{
          			"name": "OS_DOMAIN",
          			"value": "{{ OS_DOMAIN }}"
          		},
          		{
          			"name": "APP_COMPONENT",
          			"value": "consoleauth"
          		},
          		{
          			"name": "APP_USER",
          			"value": "nova"
          		},
          		{
          			"name": "NOVA_ROLE",
          			"value": "controller"
          		}
          	],
          	"volumeMounts": [
          		{
          			"name": "os-config-db",
          			"mountPath": "/var/run/harbor/secrets/config-db",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-api-db",
          			"mountPath": "/var/run/harbor/secrets/config-api-db",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-keystone",
          			"mountPath": "/var/run/harbor/secrets/config-keystone",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-messaging-auth",
          			"mountPath": "/var/run/harbor/secrets/config-messaging-auth",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-ssl-user-secret",
          			"mountPath": "/run/harbor/auth/user",
          			"readOnly": true
          		},
          		{
          			"name": "pod-etc-nova",
          			"mountPath": "/pod/etc/nova",
          			"readOnly": false
          		}
          	],
          	"securityContext": {
          		"privileged": false
          	}
          }
        ]'
    spec:
      hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: nova-consoleauth
          image: {{ IMAGE_NOVA_CONSOLEAUTH }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
          volumeMounts:
            - name: pod-etc-nova
              mountPath: /etc/nova
              readOnly: true
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
          securityContext:
            privileged: false
      volumes:
        - name: pod-etc-nova
          emptyDir: {}
        - name: os-config-db
          secret:
            secretName: nova-db
        - name: os-config-api-db
          secret:
            secretName: nova-api-db
        - name: os-config-keystone
          secret:
            secretName: nova-keystone
        - name: os-config-messaging-auth
          secret:
            secretName: messaging-auth
        - name: os-config-ssl-user-secret
          secret:
            secretName: nova-user-ssl-secret
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    openstack-app: nova-api-metadata
    version: v0.1.0
  name: nova-api-metadata-master
  namespace: os-nova
spec:
  replicas: 1
  template:
    metadata:
      labels:
        openstack-app: nova-api-metadata
        version: v0.1.0
      name: nova-api-metadata-master
      namespace: os-nova
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[
          {
          	"name": "nova-consoleauth-init",
          	"image": "{{ IMAGE_NOVA_INIT }}",
          	"imagePullPolicy": "{{ IMAGE_PULL_POLICY }}",
          	"env": [
          		{
          			"name": "OS_DOMAIN",
          			"value": "{{ OS_DOMAIN }}"
          		},
          		{
          			"name": "APP_COMPONENT",
          			"value": "consoleauth"
          		},
          		{
          			"name": "APP_USER",
          			"value": "nova"
          		},
          		{
          			"name": "NOVA_ROLE",
          			"value": "controller"
          		}
          	],
          	"volumeMounts": [
          		{
          			"name": "os-config-db",
          			"mountPath": "/var/run/harbor/secrets/config-db",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-api-db",
          			"mountPath": "/var/run/harbor/secrets/config-api-db",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-keystone",
          			"mountPath": "/var/run/harbor/secrets/config-keystone",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-messaging-auth",
          			"mountPath": "/var/run/harbor/secrets/config-messaging-auth",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-neutron-shared-secret",
          			"mountPath": "/var/run/harbor/secrets/config-neutron-shared-secret",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-ssl-user-secret",
          			"mountPath": "/run/harbor/auth/user",
          			"readOnly": true
          		},
          		{
          			"name": "pod-etc-nova",
          			"mountPath": "/pod/etc/nova",
          			"readOnly": false
          		}
          	],
          	"securityContext": {
          		"privileged": false
          	}
          }
        ]'
    spec:
      hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: nova-api-metadata
          image: {{ IMAGE_NOVA_API_METADATA }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          ports:
            - containerPort: 8775
              hostPort: 8775
              protocol: TCP
              name: n-meta
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
          volumeMounts:
            - name: pod-etc-nova
              mountPath: /etc/nova
              readOnly: true
            - name: os-config-ssl-secret
              mountPath: /run/harbor/auth/ssl
              readOnly: true
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
          securityContext:
            privileged: false
      volumes:
        - name: pod-etc-nova
          emptyDir: {}
        - name: os-config-db
          secret:
            secretName: nova-db
        - name: os-config-api-db
          secret:
            secretName: nova-api-db
        - name: os-config-keystone
          secret:
            secretName: nova-keystone
        - name: os-config-messaging-auth
          secret:
            secretName: messaging-auth
        - name: os-config-ssl-secret
          secret:
            secretName: metadata-ssl-secret
        - name: os-config-ssl-user-secret
          secret:
            secretName: nova-user-ssl-secret
        - name: os-config-neutron-shared-secret
          secret:
            secretName: neutron-shared-secret
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    openstack-app: nova-serialproxy
    version: v0.1.0
  name: nova-serialproxy-master
  namespace: os-nova
spec:
  replicas: 1
  template:
    metadata:
      labels:
        openstack-app: nova-serialproxy
        version: v0.1.0
      name: nova-serialproxy-master
      namespace: os-nova
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[
          {
          	"name": "nova-serialproxy-init",
          	"image": "{{ IMAGE_NOVA_INIT }}",
          	"imagePullPolicy": "{{ IMAGE_PULL_POLICY }}",
          	"env": [
          		{
          			"name": "OS_DOMAIN",
          			"value": "{{ OS_DOMAIN }}"
          		},
          		{
          			"name": "APP_COMPONENT",
          			"value": "serialproxy"
          		},
          		{
          			"name": "APP_USER",
          			"value": "nova"
          		},
          		{
          			"name": "NOVA_ROLE",
          			"value": "controller"
          		}
          	],
          	"volumeMounts": [
          		{
          			"name": "os-config-db",
          			"mountPath": "/var/run/harbor/secrets/config-db",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-api-db",
          			"mountPath": "/var/run/harbor/secrets/config-api-db",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-keystone",
          			"mountPath": "/var/run/harbor/secrets/config-keystone",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-messaging-auth",
          			"mountPath": "/var/run/harbor/secrets/config-messaging-auth",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-ssl-user-secret",
          			"mountPath": "/run/harbor/auth/user",
          			"readOnly": true
          		},
          		{
          			"name": "pod-etc-nova",
          			"mountPath": "/pod/etc/nova",
          			"readOnly": false
          		}
          	],
          	"securityContext": {
          		"privileged": false
          	}
          }
        ]'
    spec:
      hostNetwork: true
      nodeSelector:
        harbor-role: master
      containers:
        - name: nova-serialproxy
          image: {{ IMAGE_NOVA_SERIALPROXY }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          ports:
            - containerPort: 6083
              hostPort: 6083
              protocol: TCP
              name: n-ser
          env:
            - name: OS_DOMAIN
              value: {{ OS_DOMAIN }}
          volumeMounts:
            - name: pod-etc-nova
              mountPath: /etc/nova
              readOnly: true
            - name: os-config-ssl-secret
              mountPath: /run/harbor/auth/ssl
              readOnly: true
            - name: os-config-ssl-user-secret
              mountPath: /run/harbor/auth/user
              readOnly: true
          securityContext:
            privileged: false
      volumes:
        - name: pod-etc-nova
          emptyDir: {}
        - name: os-config-db
          secret:
            secretName: nova-db
        - name: os-config-api-db
          secret:
            secretName: nova-api-db
        - name: os-config-keystone
          secret:
            secretName: nova-keystone
        - name: os-config-messaging-auth
          secret:
            secretName: messaging-auth
        - name: os-config-ssl-secret
          secret:
            secretName: serial-ssl-secret
        - name: os-config-ssl-user-secret
          secret:
            secretName: nova-user-ssl-secret
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    openstack-app: nova-compute-node
    version: v0.1.0
  name: nova-compute-node-docker
  namespace: os-nova
spec:
  template:
    metadata:
      labels:
        openstack-app: nova-compute-node
        version: v0.1.0
      name: nova-compute-node-docker
      namespace: os-nova
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[
          {
          	"name": "nova-compute-init",
          	"image": "{{ IMAGE_NOVA_INIT }}",
          	"imagePullPolicy": "{{ IMAGE_PULL_POLICY }}",
          	"env": [
          		{
          			"name": "OS_DOMAIN",
          			"value": "{{ OS_DOMAIN }}"
          		},
          		{
          			"name": "APP_COMPONENT",
          			"value": "compute-docker"
          		},
          		{
          			"name": "APP_USER",
          			"value": "nova"
          		},
          		{
          			"name": "NOVA_ROLE",
          			"value": "compute"
          		}
          	],
          	"volumeMounts": [
          		{
          			"name": "os-config-keystone",
          			"mountPath": "/var/run/harbor/secrets/config-keystone",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-messaging-auth",
          			"mountPath": "/var/run/harbor/secrets/config-messaging-auth",
          			"readOnly": true
          		},
          		{
          			"name": "os-config-ssl-user-secret",
          			"mountPath": "/run/harbor/auth/user",
          			"readOnly": true
          		},
          		{
          			"name": "pod-etc-nova",
          			"mountPath": "/pod/etc/nova",
          			"readOnly": false
          		}
          	],
          	"securityContext": {
          		"privileged": false
          	}
          }
        ]'
    spec:
      hostNetwork: true
      hostPID: true
      containers:
      - name: nova-compute-node-docker
        image: {{ IMAGE_NOVA_COMPUTE_DOCKER }}
        imagePullPolicy: {{ IMAGE_PULL_POLICY }}
        env:
          - name: OS_DOMAIN
            value: {{ OS_DOMAIN }}
        volumeMounts:
          - name: host-var-run-openvswitch
            mountPath: /var/run/openvswitch
            readOnly: false
          - name: host-var-run-netns
            mountPath: /var/run/netns
            readOnly: false
          - name: host-dev
            mountPath: /dev
            readOnly: false
          - name: host-var-run
            mountPath: /var/run
            readOnly: false
          - name: host-lib-modules
            mountPath: /lib/modules
            readOnly: true
          - name: host-sys
            mountPath: /sys
            readOnly: false
          - name: host-docker-socket
            mountPath: /var/run/docker.sock
            readOnly: false
          - name: pod-etc-nova
            mountPath: /etc/nova
            readOnly: true
          - name: os-config-ssl-user-secret
            mountPath: /run/harbor/auth/user
            readOnly: true
        securityContext:
          privileged: true
      volumes:
        - name: pod-etc-nova
          emptyDir: {}
        - name: host-var-run-openvswitch
          hostPath:
            path: /var/run/openvswitch
        - name: host-var-run-netns
          hostPath:
            path: /var/run/netns
        - name: host-dev
          hostPath:
            path: /dev
        - name: host-var-run
          hostPath:
            path: /var/run
        - name: host-lib-modules
          hostPath:
            path: /lib/modules
        - name: host-sys
          hostPath:
            path: /sys
        - name: host-docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: os-config-keystone
          secret:
            secretName: nova-keystone
        - name: os-config-messaging-auth
          secret:
            secretName: messaging-auth
        - name: os-config-ssl-user-secret
          secret:
            secretName: nova-user-ssl-secret
